"""
Django settings for podmanager project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd-!!lv+@edqlpz*kc9rn(ho3hgkwva5t)x5a@k)9m#@ov_uo_b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'grappelli',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'playlist',
    'rest_framework'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'podmanager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'podmanager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

GRAPPELLI_ADMIN_TITLE = "Podcast Manager"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.6/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

AUDIOS_URL = 'audios/'
COVERS_URL = 'static/images/covers/'

MEDIA_URL = os.path.join(BASE_DIR, 'audios/')
# Playlist settings
CURRENT_PLAYLIST = 'current.m3u'
TMP_PLAYLIST = 'tmp.m3u'

# Se alamacenan aqui las imagenes subidas por lis usuarios del directo.
LIVE_COVERS_FOLDER = 'images/live_covers/'

# Twitter settings
TWITTER_OAUTH = {}
TWITTER_OAUTH['ACCESS_TOKEN'] = 'hackme'
TWITTER_OAUTH['ACCESS_TOKEN_SECRET'] = 'hackme'
TWITTER_OAUTH['CONSUMER_KEY'] = 'hackme'
TWITTER_OAUTH['CONSUMER_KEY_SECRET'] = 'hackme'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'django_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/django.log',
            'formatter': 'verbose'
        },
        'podget_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/podget.log',
            'formatter': 'verbose'
        },
        'playlist_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/playlist.log',
            'formatter': 'verbose'
        },
        'tweets_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/tweets.log',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['django_file'],
            'propagate': False,
            'level': 'INFO',
        },
        'podget': {
            'handlers': ['podget_file'],
            'level': 'INFO',
        },
        'playlist': {
            'handlers': ['playlist_file'],
            'level': 'INFO',
        }
    }
}